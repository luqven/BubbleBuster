!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);class i{constructor(t){this.x=0,this.y=0,this.render=!0,this.canvas=t.canvas,this.ctx=t.canvas.getContext("2d"),this.container=t.container,this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.mousePos={x:this.container.offsetWidth/2,y:this.container.offsetHeight/2},this.colors={red:"rgba(255, 0, 0)",blue:"blue",green:"green",yellow:"yellow"},this.shapes=t.shapes,this.animations=t.animations,this.canvasDidMount=!1,this.draw=this.draw.bind(this),this.resize=this.resize.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onCanvasDidMount=this.onCanvasDidMount.bind(this)}onMouseMove(){this.container.addEventListener("mousemove",t=>{this.mousePos.x=t.offsetX,this.mousePos.y=t.offsetY/1.2})}resize(){this.container.addEventListener("resize",()=>{this.width=this.container.offsetWidth,this.height=this.container.offsetHeight})}onCanvasDidMount(){this.resize()}draw(){!1!==this.render&&(!1===this.canvasDidMount&&(this.canvasDidMount=!0,this.onCanvasDidMount()),this.ctx.clearRect(0,0,this.width,this.height))}}document.addEventListener("DOMContentLoaded",()=>{console.log("webpack is running..."),console.log("DOM fully loaded and parsed");const t=new i({canvas:document.getElementById("gameCanvas"),container:document.getElementById("gameContainer")}),e=()=>{window.requestAnimationFrame(e),t.render()};window.requestAnimationFrame(e)})}]);